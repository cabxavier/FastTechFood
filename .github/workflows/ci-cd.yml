name: Test and Deploy Workflow

on:
  push:
    branches: [ main ]

jobs:
  test_jobs:
    name: Executando job de teste
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup .NET
      uses: actions/setup-dotnet@v4.1.0
      with:
        dotnet-version: 8.x

    - name: Restore Dependencies
      run: dotnet restore

    - name: Build Solution
      run: dotnet build --no-restore

    - name: Run Tests
      run: dotnet test --no-build --logger "trx;LogFileName=test-results.trx"

    - name: Publish Test Results
      uses: actions/upload-artifact@v4
      with:
        name: Test-Results
        path: '**/test-results.trx'

    - name: Docker Login
      uses: docker/login-action@v3.3.0
      with:
        username: 'cabxavier'
        password: ${{ secrets.DOCKERHUB_FIAP_FASTTECHFOOD_API_PASSWORD }}

    - name: Check docker compose
      run: |
        curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        chmod +x /usr/local/bin/docker-compose

    - name: Build and start Docker Compose
      run: |
        docker-compose up --build -d
    
    - name: Build and push Docker images
      uses: docker/build-push-action@v6.9.0
      with:       
        context: .
        tags: 'cabxavier/fiap-fasttechfood-api:latest'
        push: true

  deploy_to_kubernetes:
    name: Deploy to Kubernetes
    needs: test_jobs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install kubectl and kind
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/
          
          curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.20.0/kind-linux-amd64
          chmod +x ./kind
          sudo mv ./kind /usr/local/bin/kind

      - name: Create Kind cluster
        run: |
          cat <<EOF > kind-config.yaml
          kind: Cluster
          apiVersion: kind.x-k8s.io/v1alpha4
          nodes:
          - role: control-plane
            extraPortMappings:
            - containerPort: 30003
              hostPort: 30003
              protocol: TCP
          EOF
          
          kind create cluster --config kind-config.yaml
          kubectl cluster-info

      - name: Create namespace
        run: kubectl create namespace fasttechfood || true

      - name: Deploy Kubernetes manifests
        run: |
          kubectl apply -f ./k8s/persistentvolumeclaims/
          kubectl apply -f ./k8s/configmaps/
          kubectl apply -f ./k8s/deployments/
          kubectl apply -f ./k8s/services/
          
      - name: Verify deployments
        run: |
          echo "### Cluster status ###"
          kubectl get nodes
          
          echo "### Resources in fasttechfood namespace ###"
          kubectl get all,pvc -n fasttechfood
          
          echo "### Pods details ###"
          kubectl describe pods -n fasttechfood